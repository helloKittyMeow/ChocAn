import java.util.*;import java.io.*;public class ProviderDirectory {  private static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));  private static List<Service> services = new LinkedList<Service>();  private static String getToken(String prompt) {    while (true) {      try {        System.out.print(prompt);        String line = reader.readLine();        StringTokenizer tokenizer = new StringTokenizer(line,"\n\r\f");        if (tokenizer.hasMoreTokens()) {          return tokenizer.nextToken();        }      } catch (IOException ioe) {        System.exit(0);      }    }	}    private static int requestServiceCode(String prompt) {    while (true) {		  try {        String item = getToken(prompt);        Integer num = Integer.valueOf(item);        if ((num.intValue() >= 0) && (num.intValue() <= 999999)) {          return num.intValue();        } else {          System.out.println("Please input a 6 digit number");        }		  } catch (NumberFormatException nfe) {        System.out.println("Please input a number");		  }		}  }    private static String promptString(String prompt, int MAX) {    while (true) {      String item = getToken(prompt);      // check string length      return item;		}  }    private static int promptFloat(String prompt) {    while (true) {		  try {        String item = getToken(prompt);        Float num = Float.valueOf(item);        return num.value();		  } catch (NumberFormatException nfe) {        System.out.println("Please input a number");		  }		}  }    public static boolean addService() {    load();        int code;    String name;    float fee;        code = requestServiceCode("Enter code (6 digits): ");        name = promptString("Enter service name (20 characters): ", 20);        fee = promptFloat("Enter service fee: ");        Service service = new Service(code, name, fee);        services.add(service);        save();  }  // This method modifies a service.  public static void modifyService(int code) {    load();        for (ListIterator iterator = services.listIterator(); iterator.hasNext(); ) {      Service service = (Service) iterator.next();      if(service.getCode() == code) {        // get service info (name, fee, code) from the user;      //  service.setName(name);      //  service.getFee(fee);      //  service.getCode(code);        System.out.println(service);        break;      }    }        save();  }  // This method removes a service.  public static void removeService(int code) {    load();        for (ListIterator iterator = services.listIterator(); iterator.hasNext(); ) {      Service service = (Service) iterator.next();      if(service.getCode() == code) {        // remove service        services.remove(service);        System.out.println("Removed service: " + code);        break;      }    }        save();  }  // This method prints out all the services with their name,fee, and code  public static void printServices() {    for (ListIterator iterator = services.listIterator(); iterator.hasNext(); ) {      Service service = (Service) iterator.next();      String name = service.getName();      System.out.println(service);    }  }  // This method finds a service name through its service code  public static String getServiceName(int code) {    for (ListIterator iterator = services.listIterator(); iterator.hasNext(); ) {      Service service = (Service) iterator.next();      int serviceCode = service.getCode();      if (serviceCode == code) {        String name = service.getName();        return name;      }    }  }  // This method finds a service fee through its service code  public static float getServiceFee(int code) {    for (ListIterator iterator = services.listIterator(); iterator.hasNext(); ) {      Service service = (Service) iterator.next();      int serviceCode = service.getCode();      if (serviceCode == code) {        float fee = service.getFee();        return fee;      }    }  }  // This method saves Provider Directory to a file.  public static void save() {    // save the services to a file      }  // This method reads Provider Directory to a file.  public static void load() {    // read the services to a file      }}